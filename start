#!/bin/bash

# This script starts up all the applications I use on a daily basis.
# When remote, I have to connect to the vpn first and then run this script.

LOGDIR=~/.local/log
LOG=$LOGDIR/start.log

mkdir -p "$(dirname $LOG)"

date > "$LOG"
echo "Updating .local/latest (latest mise managed programs)" | tee -a "$LOG"
~/bin/make-local-latest.sh &>> "$LOG"

# Installed the wiki in bun, so have to run it in bun.
echo Starting tiddlywiki. | tee -a "$LOG"
cd ~/projects/wiki && nohup bun run tiddlywiki arbor --listen port=9999 &>> $LOG &

# emacs --daemon &>> "$LOG" &
# firefox &>> "$LOG" &

echo Starting chromium. | tee -a "$LOG"
flatpak run org.chromium.Chromium &>> "$LOG" &

echo Starting slack. | tee -a "$LOG"
flatpak run com.slack.Slack &>> "$LOG" &

echo Starting webex. | tee -a "$LOG"
/opt/Webex/bin/CiscoCollabHost jgaines &>> "$LOG" &
# slack &>> "$LOG" &
# exo-open --launch WebBrowser &>> "$LOG" &

# echo Starting pycharm. | tee -a "$LOG"
# signal-reset pycharmp &>> "$LOG" &

# xfce4-terminal --tab --tab --tab &>> "$LOG"
# edit -c &>> "$LOG" &
# code /etc/hosts

echo Starting zeal. | tee -a "$LOG"
flatpak run org.zealdocs.Zeal &>> "$LOG" &

echo Starting Obsidian. | tee -a "$LOG"
~/apps/Obsidian.AppImage &>> "$LOG" &

# echo Starting OpenSnitch UI. | tee -a "$LOG"
# sudo opensnitch-ui &>> "$LOG" &

# If weren't not on the vpn, then update stuff in the background.
if ip addr show tun0 &>> /dev/null; then
    echo "On VPN, not auto updating stuff." | tee -a "$LOG"
else
    echo "Not on VPN, updating repos" | tee -a "$LOG"
    update-all-repos &> $LOGDIR/update-all-repos.txt &
    stty sane
    echo "  and updating brew and managed tools" | tee -a "$LOG"
    morning-brew.sh &> $LOGDIR/brew-upgrade.log &
    stty sane
    echo "  and updating mise and managed tools" | tee -a "$LOG"
    mise self-update -y &> $LOGDIR/mise-self-update.log &
    stty sane
    echo "  and updating uv managed tools" | tee -a "$LOG"
    uv tool upgrade --all &> $LOGDIR/uv-tool-upgrade.log &
    stty sane
    echo "  and updating pipx managed tools" | tee -a "$LOG"
    pipx upgrade-all &> $LOGDIR/pipx-upgrade-all.log &
    stty sane
    echo "  and checking for werk updates" | tee -a "$LOG"
    update-werk.sh &> $LOGDIR/update-werk.log &
    stty sane
    # echo "  and updating cargo managed tools" | tee -a "$LOG"
    # cargo install-update -a &> $LOGDIR/cargo-install-update.log &
    # stty sane
    # If rust was upgraded use the install-cargo-binstall.sh script to restore cargo managed apps.
fi
cd

# Check if the file at ~/.config/$USER/crates-v1.json has 2 hard links

# CRATES_FILE="$HOME/.config/$USER/crates-v1.json"
# if [ -e "$CRATES_FILE" ]; then
#     LINK_COUNT=$(stat -c %h "$CRATES_FILE")
#     if [ "$LINK_COUNT" -eq 2 ]; then
#         echo "The file $CRATES_FILE has 2 hard links." | tee -a "$LOG"
#     else
#         echo "The file $CRATES_FILE does not have 2 hard links. It has $LINK_COUNT hard links." | tee -a "$LOG"
#     fi
# else
#     echo "The file $CRATES_FILE does not exist." | tee -a "$LOG"
# fi
